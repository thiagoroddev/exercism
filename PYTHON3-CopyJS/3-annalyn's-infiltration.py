"""Instru√ß√µes
Neste exerc√≠cio, voc√™ implementar√° a l√≥gica da miss√£o para um novo jogo de RPG que um amigo est√° desenvolvendo. A personagem principal do jogo √© Annalyn, uma garota corajosa com um cachorro de estima√ß√£o feroz e leal. Infelizmente, ocorre um desastre, pois sua melhor amiga foi sequestrada enquanto procurava frutas na floresta. Annalyn tentar√° encontrar e libertar sua melhor amiga, opcionalmente levando seu cachorro com ela nesta miss√£o.

Depois de algum tempo seguindo a trilha de sua melhor amiga, ela encontra o acampamento onde sua melhor amiga est√° presa. Acontece que existem dois sequestradores: um cavaleiro poderoso e um arqueiro astuto.

Tendo encontrado os sequestradores, Annalyn considera quais das seguintes a√ß√µes ela pode realizar:

1- Ataque r√°pido: um ataque r√°pido pode ser feito se o cavaleiro estiver dormindo, pois leva tempo para ele colocar a armadura, ent√£o ficar√° vulner√°vel.

2- Espi√£o: o grupo pode ser espionado se pelo menos um deles estiver acordado. Caso contr√°rio, espionar √© uma perda de tempo.

3- Sinalizar prisioneiro: o prisioneiro pode ser sinalizado usando sons de p√°ssaros se o prisioneiro estiver acordado e o arqueiro estiver dormindo, pois os arqueiros s√£o treinados em sinaliza√ß√£o de p√°ssaros para que possam interceptar a mensagem.

4- Prisioneiro livre: Annalyn pode tentar entrar furtivamente no acampamento para libertar o prisioneiro. Isso √© algo arriscado de se fazer e s√≥ pode ter sucesso de duas maneiras:
Se Annalyn tiver seu cachorro de estima√ß√£o, ela poder√° resgatar o prisioneiro se o arqueiro estiver dormindo. O cavaleiro est√° com medo do cachorro e o arqueiro n√£o ter√° tempo de se preparar antes que Annalyn e o prisioneiro possam escapar.
Se Annalyn n√£o tem seu cachorro, ela e o prisioneiro devem ser muito sorrateiros! Annalyn pode libertar o prisioneiro se o prisioneiro estiver acordado e o cavaleiro e o arqueiro estiverem dormindo, mas se o prisioneiro estiver dormindo, eles n√£o poder√£o ser resgatados: o prisioneiro ficaria surpreso com a apari√ß√£o repentina de Annalyn e acordaria o cavaleiro e o arqueiro.
=========================================================
Voc√™ tem quatro tarefas: implementar a l√≥gica para determinar se as a√ß√µes acima est√£o dispon√≠veis com base no estado dos tr√™s personagens encontrados na floresta e se o cachorro de estima√ß√£o de Annalyn est√° presente ou n√£o.

1. Verifique se a a√ß√£o ‚ÄòAtaque R√°pido‚Äô √© poss√≠vel
Implemente uma fun√ß√£o chamada canExecuteFastAttack que assume um valor booleano que indica se o cavaleiro est√° acordado. Esta fun√ß√£o retorna verdadeiro se a a√ß√£o 'Ataque R√°pido' estiver dispon√≠vel com base no estado do personagem. Caso contr√°rio, retorna falso:

const cavaleiroIsAwake = verdadeiro;
canExecuteFastAttack(knightIsAwake);
// => falso

2. Verifique se a a√ß√£o ‚ÄòEspionar‚Äô √© poss√≠vel
Implemente uma fun√ß√£o chamada canSpy que assume tr√™s valores booleanos, indicando se o cavaleiro, o arqueiro e o prisioneiro, respectivamente, est√£o acordados. A fun√ß√£o retorna verdadeiro se a a√ß√£o 'Espi√£o' estiver dispon√≠vel com base no estado dos personagens. Caso contr√°rio, retorna falso:

const cavaleiroIsAwake = falso;
const archerIsAwake = verdadeiro;
const prisioneiroIsAwake = falso;
canSpy(cavaleiroIsAwake, arqueiroIsAwake, prisioneiroIsAwake);
// => verdadeiro

3. Verifique se a a√ß√£o 'Sinalizar Prisioneiro' √© poss√≠vel
Implemente uma fun√ß√£o chamada canSignalPrisoner que assume dois valores booleanos, indicando se o arqueiro e o prisioneiro, respectivamente, est√£o acordados. A fun√ß√£o retorna verdadeiro se a a√ß√£o 'Signal Prisoner' estiver dispon√≠vel com base no estado dos personagens. Caso contr√°rio, retorna falso:

const archerIsAwake = falso;
const prisioneiroIsAwake = verdadeiro;
canSignalPrisoner(arqueiroIsAwake, prisioneiroIsAwake);
// => verdadeiro
4. Verifique se a a√ß√£o ‚ÄòPrisioneiro Livre‚Äô √© poss√≠vel
Implemente uma fun√ß√£o chamada canFreePrisoner que aceita quatro valores booleanos. Os tr√™s primeiros par√¢metros indicam se o cavaleiro, o arqueiro e o prisioneiro, respectivamente, est√£o acordados. O √∫ltimo par√¢metro indica se o cachorro de estima√ß√£o de Annalyn est√° presente. A fun√ß√£o retorna verdadeiro se a a√ß√£o 'Prisioneiro Livre' estiver dispon√≠vel com base no estado dos personagens e na presen√ßa do cachorro de estima√ß√£o de Annalyn. Caso contr√°rio, retorna falso:

const cavaleiroIsAwake = falso;
const archerIsAwake = verdadeiro;
const prisioneiroIsAwake = falso;
const petDogIsPresent = falso;
canFreePrisoner(cavaleiroIsAwake, arqueiroIsAwake, prisioneiroIsAwake, petDogIsPresent);
// => falso*/ 

//================================================================================

// @ts-verificar
//
// ‚òùüèΩ A linha acima habilita a verifica√ß√£o de tipo para este arquivo. V√°rios IDEs interpretam
// a diretiva @ts-check. Isso lhe dar√° um preenchimento autom√°tico √∫til na web
// e IDEs suportados ao implementar este exerc√≠cio. Voc√™ n√£o precisa
// entender tipos, JSDoc ou TypeScript para completar este JavaScript
// exerc√≠cio, e pode ignorar completamente este bloco de coment√°rios e diretiva.

// üëãüèΩ Ol√° de novo!
//
// Um r√°pido lembrete sobre esbo√ßos de exerc√≠cios:
//
// üí° Voc√™ pode limpar completamente qualquer stub antes de come√ßar. Muitas vezes
// recomendamos usar o stub, pois eles j√° est√£o configurados corretamente para
//trabalhe com os testes, que voc√™ pode encontrar em ./annalyns-infiltration.spec.js.
//
// üí° Voc√™ n√£o precisa escrever blocos de coment√°rios JSDoc; n√£o √© esperado
// em JavaScript idiom√°tico, mas algumas empresas e guias de estilo os aplicam.
//
// Agora ajude Annalyn a libertar sua melhor amiga!

const knightIsAwake = true;
const archerIsAwake = false;
const prisonerIsAwake = false;
const petDogIsPresent = false;

/*
  * O ataque r√°pido est√° dispon√≠vel quando o cavaleiro est√° dormindo
  *
  * @param {boolean} knightIsAwake
  *
  * @return {boolean} Se voc√™ pode ou n√£o executar um ataque r√°pido.
  */
"""

function canExecuteFastAttack(knightIsAwake) {
  if (knightIsAwake === true) {
    return false
    console.log('False')
  } else {
    return true
    console.log('True')
  }
}
console.log(canExecuteFastAttack())

"""
  * Um espi√£o √∫til captura informa√ß√µes, o que n√£o ser√° poss√≠vel fazer se todos estiverem dormindo.
  *
  * @param {boolean} knightIsAwake
  * @param {boolean} arqueiroIsAwake
  * @param {boolean} prisioneiroIsAwake
  *
  * @returns {boolean} Se voc√™ pode ou n√£o espionar algu√©m.
"""

def can_spy(knight_is_awake, archer_is_awake, prisoner_is_awake):
    if knight_is_awake or archer_is_awake or prisoner_is_awake:
        print('True')
        return True
    else:
        print('False')
        return False

print(can_spy())

"""
  * Voc√™ ser√° pego pelo arqueiro se sinalizar enquanto ele estiver acordado.
  *
  * @param {boolean} arqueiroIsAwake
  * @param {boolean} prisioneiroIsAwake
  *
  * @returns {boolean} Se voc√™ pode ou n√£o enviar um sinal ao prisioneiro.
"""

def can_signal_prisoner(archer_is_awake, prisoner_is_awake):
    if not archer_is_awake and prisoner_is_awake:
        print('True')
        return True
    else:
        print('False')
        return False

print(can_signal_prisoner())


"""
  * A etapa final do plano: libertar a melhor amiga de Annalyn.
  *
  * @param {boolean} knightIsAwake
  * @param {boolean} arqueiroIsAwake
  * @param {boolean} prisioneiroIsAwake
  * @param {boolean} petDogIsPresent
  *
  * @returns {boolean} Se voc√™ pode ou n√£o libertar o amigo de Annalyn.
"""

def can_free_prisoner(knight_is_awake, archer_is_awake, prisoner_is_awake, pet_dog_is_present):
    if pet_dog_is_present:
        if not archer_is_awake and not knight_is_awake:
            print('True')
            return True
        elif not archer_is_awake and knight_is_awake:
            return True
        else:
            print('False')
            return False
    else:
        if prisoner_is_awake:
            if not archer_is_awake and not knight_is_awake:
                print('True')
                return True
            else:
                print('False')
                return False
        else:
            print('False')
            return False

print(can_free_prisoner())


# Melhoria ChatGPT: ---------------------------------------------------------

def can_execute_fast_attack(knight_is_awake):
    return not knight_is_awake

print(can_execute_fast_attack())

def can_spy(knight_is_awake, archer_is_awake, prisoner_is_awake):
    return knight_is_awake or archer_is_awake or prisoner_is_awake

print(can_spy())

def can_signal_prisoner(archer_is_awake, prisoner_is_awake):
    return not archer_is_awake and prisoner_is_awake

print(can_signal_prisoner())

def can_free_prisoner(knight_is_awake, archer_is_awake, prisoner_is_awake, pet_dog_is_present):
    if pet_dog_is_present:
        return not archer_is_awake and (not knight_is_awake or knight_is_awake)
    else:
        return prisoner_is_awake and not archer_is_awake and not knight_is_awake

print(can_free_prisoner())

